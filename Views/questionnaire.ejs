<html id="attente">
    <head>
        <title>Patientez</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">

        <link href="https://fonts.googleapis.com/css?family=Anaheim|Roboto" rel="stylesheet">

        <!-- Feuille de style -->
        <link type="text/css" href="/css/style.css" rel="stylesheet" />
    </head>

    <body>
        <header>
            <a href="/" class="titre"><img class="logo" src="/img/logobleu.png" alt="logo du site" /></a>
        </header>
        <div id="content">
            <% if (!isProf){ %>
              <img src="/img/chargement.png" alt="image de chargement" class=""/>
            <% } %>
            <p>Veuillez patientez</p>
            <p>Connexion en cours ...</p>
        </div>

        <% if (isProf){ %>
        <div style="display:flex;" id="viewProf">
            <div id="particpants-listeParticipants" class="particpants-bloc">
                <h3>Liste des particpants ayant rejoint le questionnaire : </h3>
                <span></span>
                <ul id="listParticiapnt">
                </ul>
                <p id="nbParticipants">Nombre de particpants: <span id="nbParticipantsNumber">0</span></p>
            </div>
            <div id="particpants-action">
                <div id="particpants-PIN" class="particpants-bloc">
                    ID Questionnaire : <%= questionnaireId %>
                </div>
                <div id="particpants-lancer" class="particpants-bloc" onclick="questionSuivante(true);">Relancer la question</div>
                <div id="particpants-lancer" class="particpants-bloc" onclick="questionSuivante();">Question Suivante</div>
                <div id="particpants-lancer" class="particpants-bloc" onclick="stopReponse();">Arreter la question et voir les résultats</div>
            </div>
        </div>
        <% } %>
    </body>

    <script src="/js/jquery-3.3.1.min.js" type="text/javascript"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        // js pour le questionnaire

        var socket = null;

        var identificationId = +"<%= identificationId %>";
        var isProf = +"<%= isProf %>";

        var question = null;

        /**
         * En attente de la prochaine question
         */
        function afficherAttente(){

            $("#content").html(`
                <div class="">
                    <% if (!isProf){ %>
                      <img src="/img/chargement.png" alt="image de chargement" class=""/>
                    <% } %>
                    <p>Veuillez patientez</p>
                    <p>Prochaine question dans quelques instants ...</p>
                </div>`);
        }

        /**
         *
         */
        function afficherQuestion(){

            var type = "radio"
            if (question._multiple == true){
                type = "checkbox";
            }

            var htmlReponse = ``;
            for (reponse of question._reponses){
                htmlReponse += `
                    <label class="container">${reponse._libelle}
                        <% if (!isProf){ %>
                        <input name="reponseId" type="${type}" value="${reponse._idReponse}">
                        <span class="checkmark"></span>
                        <% } %>
                    </label>`
            }

            $("#content").html(`
                <div class="question">
                    <h2>Question : ${question._libelle}</h2>
                    <div><div>
                    ${htmlReponse}
                    </div></div>
                    <% if (!isProf){ %>
                    <button id="buttonSendAnswer" class="button-type2" onclick="envoyerReponse();">Valider</button>
                    <% } %>
                </div>`);
        }

        /**
         *
         * @param resultats
         */
        function afficherResultat(resultats){

            var htmlReponse = ``;
            for (reponse of question._reponses){
                htmlReponse += `
                    <p class="container">${reponse._libelle} : ${resultats[reponse._idReponse]}</p>`
            }

            $("#content").html(`
                <div class="question">
                    <h2>Question : ${question._libelle}</h2>
                    ${htmlReponse}
                </div>`);
        }

        /**
         *
         */
        function envoyerReponse(){
            var reponsesId = [];

            if ($("input[name='reponseId']:checked").length > 0){
                $("input[name='reponseId']").prop("disabled",true);
                $("#buttonSendAnswer").prop("disabled",true);
            }

            $("input[name='reponseId']:checked").each(function () {
                $("#buttonSendAnswer").prop("disabled",true);
                reponsesId.push($(this).attr("value"));
            });

            socket.emit("answerQuestion", reponsesId);
        }

        /**
         * Demande à passer à la question suivant
         *
         * @param relancer vrai si il faut relancer la meme question
         */
        function questionSuivante(relancer = false){
            socket.emit("nextQuestion", relancer);
        }

        /**
         * Demande à arreter les réponses et obtenir les résultats
         */
        function stopReponse(){
            socket.emit("stopAnswerQuestion", null);
        }

        $(function () {
            // ------------------------------------------------------------------------------------------
            // initialisation de la connexion
            // ------------------------------------------------------------------------------------------

            socket = io.connect();

            socket.emit("identify", {"identificationId": identificationId});

            socket.on('identifySuccess', function (data) {
                afficherAttente();
            });

            // ------------------------------------------------------------------------------------------


            // Un nouvelle étudiant s'est connecté
            socket.on('newUser', function(data){
                let nom = data.nom;
                let id = data.id

                $("#listParticiapnt").append("<li id='user"+id+"'>" + nom +"</li>");
                $("#nbParticipantsNumber").html(+$("#nbParticipantsNumber").html() + 1);
            });

            // Un étudiant s'est déconnecté
            socket.on('userDisconnected', function(data){
                let nom = data.nom;
                let id = data.id

                $("#listParticiapnt li#user"+id).remove();
                $("#nbParticipantsNumber").html(+$("#nbParticipantsNumber").html() - 1);
            });

            // Réception d'une nouvelle question
            socket.on('newQuestion', function(data){
                question = data;
                afficherQuestion();
            });

            // Demande d'arret des réponses
            socket.on('stopAnswerQuestion', function(data){
                afficherAttente();
            });

            // Réception des résultats
            socket.on('showResultQuestion', function(data){
                var resultats = data;
                afficherResultat(resultats);
            });

            // Réception des résultats
            socket.on('noMoreQuestion', function(data){
                alert("Le questionnaire est terminé !");
            });

            // Une erreur
            socket.on('errors', function(data){
                alert("Erreur : \n" + data);
            });

            // Le serveur n'est plus joignable
            socket.on('disconnect', function(data){
                alert("Le serveur n'est plus joingnable !\n Essayer de rafraichir la page ...");
            });

            // Serveur de retour joignable
            socket.on('reconnect', function(data){
                window.location.reload(true);
            });
        });
    </script>
</html>
