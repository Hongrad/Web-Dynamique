<html id="attente">
<head>
    <title>Patientez</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link href="https://fonts.googleapis.com/css?family=Anaheim|Roboto" rel="stylesheet">

    <!-- Feuille de style -->
    <link type="text/css" href="/css/style.css" rel="stylesheet" />
</head>
<body>
<header>
    <a href="/" class="titre"><img class="logo" src="/img/logobleu.png" alt="logo du site" /></a>
</header>
<div id="content">
    <img src="/img/chargement.png" alt="image de chargement" class=""/>
    <p>Veuillez patientez</p>
    <p>Connexion en cours...</p>
</div>
</body>

<script src="/js/jquery-3.3.1.min.js" type="text/javascript"></script>
<script src="/socket.io/socket.io.js"></script>
<script>
    // js pour le questionnaire

    var socket = null;

    var identificationId = +"<%= identificationId %>";
    var isProf = +"<%= isProf %>";

    var question = null;

    /**
     * En attente de la prochaine question
     */
    function afficherAttente(){

        $("#content").html(`
            <div class="">
                <img src="/img/chargement.png" alt="image de chargement" class=""/>
                <p>Veuillez patientez</p>
                <p>Prochaine question dans quelques instants ...</p>
            </div>`);

        console.log("attente ...")
    }

    /**
     *
     */
    function afficherQuestion(){

        var type = "radio"
        if (question._multiple == true){
            type = "checkbox";
        }

        var htmlReponse = ``;
        console.log(question);
        for (reponse of question._reponses){
            htmlReponse += `
                <label class="container">${reponse._libelle}
                    <input name="reponseId" type="${type}" value="${reponse._idReponse}">
                    <span class="checkmark"></span>
                </label>`
        }

        $("#content").html(`
            <div class="question">
                <h2>Question : ${question._libelle}</h2>
                ${htmlReponse}
                <button class="button-type2" onclick="this.disabled = true; envoyerReponse();">Valider</button>
            </div>`);

        console.log("afficher question");
    }

    /**
     *
     * @param resultats
     */
    function afficherResultat(resultats){

        var htmlReponse = ``;
        for (reponse of question._reponses){
            htmlReponse += `
                <p class="container">${reponse._libelle} : ${resultats[reponse._idReponse]}</p>`
        }

        $("#content").html(`
            <div class="question">
                <h2>Question : ${question._libelle}</h2>
                ${htmlReponse}
            </div>`);

        console.log("afficher resultat");
    }

    /**
     *
     */
    function envoyerReponse(){
        var reponsesId = [];

        $("input[name='reponseId']").each(function () {
            reponsesId.push($(this).attr("value"));
        });

        socket.emit("answerQuestion", reponsesId);
    }

    /**
     * Demande à passer à la question suivant
     */
    function questionSuivante(){
        var relancer = true; // vraie si il faut relancer la meme question

        socket.emit("nextQuestion", false);
    }

    /**
     * Demande à arreter les réponses
     */
    function stopReponse(){
        socket.emit("stopAnswerQuestion", null);
    }

    $(function () {
        // ------------------------------------------------------------------------------------------
        // initialisation de la connexion
        // ------------------------------------------------------------------------------------------

        socket = io.connect();

        socket.emit("identify", {"identificationId": identificationId});

        socket.on('identifySuccess', function (data) {
            console.log("Identification réussi");
            afficherAttente();
        });

        // ------------------------------------------------------------------------------------------


        // Un nouvelle étudiant s'est connecté
        socket.on('newUser', function(data){
            // Todo : afficher un truc
            console.log("Nouvelle connexion : " + data);
        });

        // Un étudiant s'est déconnecté
        socket.on('userDisconnected', function(data){
            // Todo : afficher un truc
            console.log("Utilisateur déconnecté : " + data);
        });

        // Réception d'une nouvelle question
        socket.on('newQuestion', function(data){
            question = data;
            afficherQuestion();
        });

        // Demande d'arret des réponses
        socket.on('stopAnswerQuestion', function(data){
            // Todo : afficher quelque chose car on ne peut plus répondre à la question
            console.log("test stop question");
        });

        // Réception des résultats
        socket.on('showResultQuestion', function(data){
            var resultats = data;
            afficherResultat(resultats);
        });

        // Une erreur
        socket.on('errors', function(data){
            console.log("Erreur : " + data);
            alert("Erreur : \n" + data);
        });

        // Le serveur n'est plus joignable
        socket.on('disconnect', function(data){
            // Todo : afficher un message
            console.log("test deconnecté");
        });

        // Serveur de retour joignable
        socket.on('reconnect', function(data){
            // Todo : afficher un message
            console.log("test reconnect");
            window.location.reload(true);
        });
    });
</script>
</html>